Am implementat multe dintre comenzi.
Stiu, codul arata urat, mai trebuie spart in bucati mai mici, in functii dedicate,
dar momentan voiam sa vad ca merge. O sa fac si asta ca sa se inteleaga ceva totusi din
ce scrie acolo.

In folderul databases/stefan.ungureanu gasesti baza de date CompanyDB.

Urmatoarele comenzi rulate din query functioneaza:

	create table clienti (id number PK, nume string, email string);
	drop table clienti;
	insert into angajati values (8, 'Paul', 1, 4800);
	delete from angajati where salariu < 4000;
	delete from angajati where nume = 'Stefan';
	select * from angajati;
	select nume, salariu from angajati;
	select nume as Name, salariu as Income from angajati;
	select nume, salariu from angajati where salariu >= 4500;
	select nume from angajati where departament_id != 3;
	select nume, salariu from angajati order by salariu;
	select nume, salariu from angajati order by salariu desc;
	select nume, salariu from angajati where departament_id = 1 order salariu desc;

Poti scrie una sau mai multe comenzi simultan, dar la final trebuie obligatoriu pus ";".
De asemenea, comenzile trebuie scrise cu litere mici obligatoriu (dar poti pune valori cu litera mare).
Poti scrie o comanda pe mai multe linii

	select *
	from angajati;

Singura chestie care nu merge este selectul dupa o coloane pentru care se foloseste alias (dar nu conteaza asa mult, nici nu mai ne batem capul aici).
Exista doar doua tipuri de date: "number" pentru valori numerice si "string" pentru siruri de caractere (se pun intre ' ' , nu " " asa).
Am adaugat suport pentru comentarii (liniile care incep cu // nu se executa, de asemenea, sunt evidentiate);
Am modificat ce se afiseaza in Tables (tabele + coloane + tipuri de date). Nu trebuie adaugat tot continutul
pentru ca se poate face select bine.
Am adaugat suport pentru keyword-ul "as".
Am adaugat ordonare descrescatoare (order by desc) si ordonare normala (order by).
Nu mai facem o fereastra pop-up pentru vizualizarea selecturilor, se vad foarte frumos in RESULTS_INFO (am facut si timpul de executie).


Atentie! Toate comenzile, absolut toate sunt LOWERCASE.

UPDATES
__________________________

Au forma de apel:
	update table nume_tabel set col1 = valoare1, col2 = valoare2 where col3 operator valoare3

Exemple:
	update table angajati set salariu = 6000 where departament_id = 1


PROCEDURES
_________________________

Am facut partea de proceduri stocate:

sintaxa pentru creare este:

	create procedure "name"
	instruction textinstructiune (fara ;)
	instruction textinstructiune (fara ;)
	instruction end;

Pentru apelare:
	call "name"

Daca are parametrii, acestia sunt definiti cu @, adica:
	
	create procedure test
	instruction select * from angajati where departament_id=@dep_id
	instruction end;

Apelarea este 
	call test(1)

Merge pentru orice numar de variabile, pentru apelurile care nu au parametrii se pune (),
chiar daca procedura TEST nu are parametrii se apeleaza call TEST();
Am lasat doua proceduri pentru test.